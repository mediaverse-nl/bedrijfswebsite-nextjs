{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport PropTypes from 'prop-types';\nimport routes, { Link } from '../routes';\nimport React, { Children } from 'react';\n\nvar ActiveLink = function ActiveLink(_ref) {\n  var children = _ref.children,\n      activeClassName = _ref.activeClassName,\n      props = _objectWithoutProperties(_ref, [\"children\", \"activeClassName\"]);\n\n  var router = useRouter();\n  var child = Children.only(children);\n  var childClassName = child.props.className || '';\n  var isActiveRoute = props.route === undefined ? false : routes.findAndGetUrls(props.route, props.params).urls.as === router.asPath;\n  var className = isActiveRoute ? \"\".concat(childClassName, \" \").concat(activeClassName).trim() : childClassName;\n  return __jsx(Link, props, React.cloneElement(child, {\n    className: className || null\n  }));\n};\n\nActiveLink.propTypes = {\n  activeClassName: PropTypes.string.isRequired\n};\nexport default ActiveLink;","map":{"version":3,"sources":["C:/Projects/bedrijfswebsite-nextjs/components/ActiveLink.js"],"names":["useRouter","PropTypes","routes","Link","React","Children","ActiveLink","children","activeClassName","props","router","child","only","childClassName","className","isActiveRoute","route","undefined","findAndGetUrls","params","urls","as","asPath","trim","cloneElement","propTypes","string","isRequired"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,IAAgBC,IAAhB,QAA2B,WAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA6C;AAAA,MAA1CC,QAA0C,QAA1CA,QAA0C;AAAA,MAAhCC,eAAgC,QAAhCA,eAAgC;AAAA,MAAZC,KAAY;;AAE5D,MAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,MAAMW,KAAK,GAAGN,QAAQ,CAACO,IAAT,CAAcL,QAAd,CAAd;AACA,MAAMM,cAAc,GAAGF,KAAK,CAACF,KAAN,CAAYK,SAAZ,IAAyB,EAAhD;AAEA,MAAMC,aAAa,GAAIN,KAAK,CAACO,KAAN,KAAgBC,SAAjB,GAA8B,KAA9B,GAAsCf,MAAM,CAACgB,cAAP,CAAsBT,KAAK,CAACO,KAA5B,EAAmCP,KAAK,CAACU,MAAzC,EAAiDC,IAAjD,CAAsDC,EAAtD,KAA6DX,MAAM,CAACY,MAAhI;AAEA,MAAMR,SAAS,GAAGC,aAAa,GACzB,UAAGF,cAAH,cAAqBL,eAArB,EAAuCe,IAAvC,EADyB,GAEzBV,cAFN;AAIA,SACI,MAAC,IAAD,EAAUJ,KAAV,EACKL,KAAK,CAACoB,YAAN,CAAmBb,KAAnB,EAA0B;AACvBG,IAAAA,SAAS,EAAEA,SAAS,IAAI;AADD,GAA1B,CADL,CADJ;AAOH,CAnBD;;AAqBAR,UAAU,CAACmB,SAAX,GAAuB;AACnBjB,EAAAA,eAAe,EAAEP,SAAS,CAACyB,MAAV,CAAiBC;AADf,CAAvB;AAIA,eAAerB,UAAf","sourcesContent":["import { useRouter } from 'next/router'\r\nimport PropTypes from 'prop-types'\r\nimport routes, {Link} from '../routes';\r\nimport React, { Children } from 'react'\r\n\r\nconst ActiveLink = ({ children, activeClassName, ...props }) => {\r\n\r\n    const router = useRouter()\r\n    const child = Children.only(children)\r\n    const childClassName = child.props.className || ''\r\n\r\n    const isActiveRoute = (props.route === undefined) ? false : routes.findAndGetUrls(props.route, props.params).urls.as === router.asPath;\r\n\r\n    const className = isActiveRoute\r\n        ? `${childClassName} ${activeClassName}`.trim()\r\n        : childClassName\r\n\r\n    return (\r\n        <Link {...props}>\r\n            {React.cloneElement(child, {\r\n                className: className || null\r\n            })}\r\n        </Link>\r\n    )\r\n}\r\n\r\nActiveLink.propTypes = {\r\n    activeClassName: PropTypes.string.isRequired\r\n}\r\n\r\nexport default ActiveLink"]},"metadata":{},"sourceType":"module"}