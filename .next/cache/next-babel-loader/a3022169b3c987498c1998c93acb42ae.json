{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Field } from \"formik\";\n\nvar InputField = /*#__PURE__*/function (_React$Component) {\n  _inherits(InputField, _React$Component);\n\n  function InputField() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InputField);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InputField)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"field\", function (props) {\n      return __jsx(\"div\", {\n        className: \"form-group\"\n      }, props.label && __jsx(\"label\", {\n        htmlFor: props.id\n      }, props.label), __jsx(Field, {\n        type: props.type,\n        name: \"test\",\n        onChange: props.handleChange,\n        onBlur: props.handleBlur,\n        value: props.value,\n        className: \"form-control \".concat(props.error ? 'is-invalid' : '')\n      }), props.error && __jsx(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        className: \"invalid-feedback\"\n      }, props.error));\n    });\n\n    return _this;\n  }\n\n  _createClass(InputField, [{\n    key: \"render\",\n    value: function render() {\n      var componentToRender = this.props.component;\n      return __jsx(Field, _extends({}, this.props, componentToRender, {\n        component: this.field\n      }));\n    }\n  }]);\n\n  return InputField;\n}(React.Component);\n\nexport { InputField as default };","map":{"version":3,"sources":["C:/Projects/bedrijfswebsite-nextjs/components/fields/InputField.js"],"names":["React","Field","InputField","props","label","id","type","handleChange","handleBlur","value","error","color","componentToRender","component","field","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,QAApB;;IAEqBC,U;;;;;;;;;;;;;;;;4DACT,UAAAC,KAAK,EAAI;AACb,aACI;AAAK,QAAA,SAAS,EAAC;AAAf,SACKA,KAAK,CAACC,KAAN,IAAe;AAAO,QAAA,OAAO,EAAED,KAAK,CAACE;AAAtB,SAA2BF,KAAK,CAACC,KAAjC,CADpB,EAEI,MAAC,KAAD;AACI,QAAA,IAAI,EAAED,KAAK,CAACG,IADhB;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,QAAQ,EAAEH,KAAK,CAACI,YAHpB;AAII,QAAA,MAAM,EAAEJ,KAAK,CAACK,UAJlB;AAKI,QAAA,KAAK,EAAEL,KAAK,CAACM,KALjB;AAMI,QAAA,SAAS,yBAAkBN,KAAK,CAACO,KAAN,GAAc,YAAd,GAA6B,EAA/C;AANb,QAFJ,EAUKP,KAAK,CAACO,KAAN,IACG;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAZ;AAA4B,QAAA,SAAS,EAAC;AAAtC,SAA0DR,KAAK,CAACO,KAAhE,CAXR,CADJ;AAgBH,K;;;;;;;6BAEQ;AACL,UAAME,iBAAiB,GAAG,KAAKT,KAAL,CAAWU,SAArC;AAEA,aAAO,MAAC,KAAD,eAAW,KAAKV,KAAhB,EAA2BS,iBAA3B;AAA8C,QAAA,SAAS,EAAE,KAAKE;AAA9D,SAAP;AACH;;;;EAxBmCd,KAAK,CAACe,S;;SAAzBb,U","sourcesContent":["import React from \"react\";\r\nimport {Field} from \"formik\"\r\n\r\nexport default class InputField extends React.Component {\r\n    field = props => {\r\n        return (\r\n            <div className=\"form-group\">\r\n                {props.label && <label htmlFor={props.id}>{props.label}</label>}\r\n                <Field\r\n                    type={props.type}\r\n                    name=\"test\"\r\n                    onChange={props.handleChange}\r\n                    onBlur={props.handleBlur}\r\n                    value={props.value}\r\n                    className={`form-control ${props.error ? 'is-invalid' : ''}`}\r\n                />\r\n                {props.error &&\r\n                    <div style={{color: \"red\"}} className=\"invalid-feedback\">{props.error}</div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const componentToRender = this.props.component;\r\n\r\n        return <Field {...this.props} {...componentToRender} component={this.field} />;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}