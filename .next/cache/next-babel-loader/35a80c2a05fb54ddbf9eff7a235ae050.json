{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Field } from \"formik\";\n\nvar InputField = /*#__PURE__*/function (_React$Component) {\n  _inherits(InputField, _React$Component);\n\n  function InputField() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InputField);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InputField)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"field\", function (props) {\n      return __jsx(\"div\", null, props.label && __jsx(\"label\", {\n        htmlFor: props.id\n      }, props.label), __jsx(Field, {\n        type: \"text\",\n        name: \"contactpersoon\" // onChange={handleChange}\n        // onBlur={handleBlur}\n        ,\n        value: props.contactpersoon,\n        className: \"form-control \".concat(props.errors ? 'is-invalid' : '')\n      }), props.touched && props.error && __jsx(\"div\", {\n        className: \"text-danger\"\n      }, props.error));\n    });\n\n    return _this;\n  }\n\n  _createClass(InputField, [{\n    key: \"render\",\n    value: function render() {\n      var componentToRender = this.props.component;\n      return __jsx(Field, _extends({}, this.props, componentToRender, {\n        component: this.field\n      }));\n    }\n  }]);\n\n  return InputField;\n}(React.Component);\n\nexport { InputField as default };","map":{"version":3,"sources":["C:/Projects/bedrijfswebsite-nextjs/components/fields/InputField.js"],"names":["React","Field","InputField","props","label","id","contactpersoon","errors","touched","error","componentToRender","component","field","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,QAApB;;IAEqBC,U;;;;;;;;;;;;;;;;4DACT,UAAAC,KAAK,EAAI;AACb,aACI,mBACKA,KAAK,CAACC,KAAN,IAAe;AAAO,QAAA,OAAO,EAAED,KAAK,CAACE;AAAtB,SAA2BF,KAAK,CAACC,KAAjC,CADpB,EAEI,MAAC,KAAD;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,gBAFT,CAGI;AACA;AAJJ;AAKI,QAAA,KAAK,EAAED,KAAK,CAACG,cALjB;AAMI,QAAA,SAAS,yBAAkBH,KAAK,CAACI,MAAN,GAAe,YAAf,GAA8B,EAAhD;AANb,QAFJ,EAUKJ,KAAK,CAACK,OAAN,IAAiBL,KAAK,CAACM,KAAvB,IAAgC;AAAK,QAAA,SAAS,EAAC;AAAf,SAA8BN,KAAK,CAACM,KAApC,CAVrC,CADJ;AAcH,K;;;;;;;6BACQ;AAEL,UAAMC,iBAAiB,GAAG,KAAKP,KAAL,CAAWQ,SAArC;AAEA,aAAO,MAAC,KAAD,eAAW,KAAKR,KAAhB,EAA2BO,iBAA3B;AAA8C,QAAA,SAAS,EAAE,KAAKE;AAA9D,SAAP;AACH;;;;EAtBmCZ,KAAK,CAACa,S;;SAAzBX,U","sourcesContent":["import React from \"react\";\r\nimport {Field} from \"formik\"\r\n\r\nexport default class InputField extends React.Component {\r\n    field = props => {\r\n        return (\r\n            <div>\r\n                {props.label && <label htmlFor={props.id}>{props.label}</label>}\r\n                <Field\r\n                    type=\"text\"\r\n                    name=\"contactpersoon\"\r\n                    // onChange={handleChange}\r\n                    // onBlur={handleBlur}\r\n                    value={props.contactpersoon}\r\n                    className={`form-control ${props.errors ? 'is-invalid' : ''}`}\r\n                />\r\n                {props.touched && props.error && <div className=\"text-danger\">{props.error}</div>}\r\n            </div>\r\n        );\r\n    }\r\n    render() {\r\n\r\n        const componentToRender = this.props.component;\r\n\r\n        return <Field {...this.props} {...componentToRender} component={this.field} />;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}