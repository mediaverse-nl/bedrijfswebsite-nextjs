{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../layouts/Main';\nimport { postContact } from '../api/contact/index';\nimport { Formik, Field, FieldProps } from \"formik\";\nimport { SelectField, TextField, Checkbox, CheckboxGroup, RadioButton, RadioButtonGroup } from \"../components/fields/InputField\";\nimport IntroBanner from \"../components/IntroBanner\";\nconst initialFormFields = {\n  pets: [],\n  contactpersoon: '',\n  emailadres: '',\n  bedrijfsnaam: '',\n  telefoonnummer: '',\n  uw_bericht: '',\n  select: \"\",\n  radio: \"\",\n  checkbox: false\n};\nconst ServiceTypes = {\n  \"onderhoud van uw website\": 1,\n  \"websoftware een maatwerk systeem special gemaakt op uw behoeftes\": 2,\n  c: 3\n};\nconst SLAs = {\n  \"onderhoud van uw website\": 1,\n  \"websoftware een maatwerk systeem special gemaakt op uw behoeftes\": 2,\n  c: 3\n};\n\nconst Page = ({}) => {\n  return __jsx(Layout, null, __jsx(IntroBanner, {\n    title: \"offerte aanvraag\"\n  }), __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-9\"\n  }, __jsx(\"h2\", null, \"offerteformulier\"), __jsx(Formik, {\n    onSubmit: (data, actions) => {\n      actions.setSubmitting(true);\n      postForm(data, actions);\n    },\n    initialValues: initialFormFields\n  }, ({\n    values,\n    errors,\n    touched,\n    setFieldValue,\n    setFieldTouched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  }) => __jsx(\"div\", null, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"needs-validation\"\n  }, __jsx(TextField, {\n    name: \"contactpersoon\",\n    label: \"contactpersoon\",\n    error: errors.contactpersoon,\n    value: values.contactpersoon\n  }), __jsx(TextField, {\n    type: \"email\",\n    name: \"emailadres\",\n    label: \"emailadres\",\n    error: errors.emailadres,\n    value: values.emailadres\n  }), __jsx(TextField, {\n    type: \"text\",\n    name: \"bedrijfsnaam\",\n    label: \"bedrijfsnaam\",\n    error: errors.bedrijfsnaam,\n    value: values.bedrijfsnaam\n  }), __jsx(CheckboxGroup, {\n    id: \"pets\",\n    label: \"naar welke dienst bent u opzoek?\",\n    value: values.pets,\n    error: errors.pets,\n    touched: touched.pets,\n    onChange: setFieldValue,\n    onBlur: setFieldTouched\n  }, Object.keys(ServiceTypes).map(function (name, index) {\n    return __jsx(Field, {\n      key: index,\n      component: Checkbox,\n      id: name,\n      label: name\n    });\n  })), __jsx(TextField, {\n    type: \"textarea\",\n    name: \"opmerking\",\n    label: \"uw_bericht\",\n    error: errors.uw_bericht,\n    value: values.uw_bericht\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn-blue btn btn-block\",\n    disabled: isSubmitting\n  }, \"Verzenden\"), __jsx(\"pre\", null, JSON.stringify(values, null, 2)))))), __jsx(\"div\", {\n    className: \"col-md-3\"\n  }))));\n};\n\nfunction postForm(data, actions) {\n  return postContact(data).then(data => {\n    if (typeof data.errors !== 'undefined') {\n      Object.keys(data.errors).forEach(function (item) {\n        actions.setFieldError(item, data.errors[item][0]);\n      });\n      return data.errors;\n    } else if (data.status == '200') {\n      console.log('messages is ontvangen', data);\n    } else {\n      console.log('something went wrong');\n      return {};\n    }\n  }).finally(() => {\n    actions.setSubmitting(false);\n  });\n}\n\nexport default Page;","map":{"version":3,"sources":["C:/Projects/bedrijfswebsite-nextjs/pages/offerte-aanvraag.js"],"names":["Layout","postContact","Formik","Field","FieldProps","SelectField","TextField","Checkbox","CheckboxGroup","RadioButton","RadioButtonGroup","IntroBanner","initialFormFields","pets","contactpersoon","emailadres","bedrijfsnaam","telefoonnummer","uw_bericht","select","radio","checkbox","ServiceTypes","c","SLAs","Page","data","actions","setSubmitting","postForm","values","errors","touched","setFieldValue","setFieldTouched","handleChange","handleBlur","handleSubmit","isSubmitting","Object","keys","map","name","index","JSON","stringify","then","forEach","item","setFieldError","status","console","log","finally"],"mappings":"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","sourcesContent":["import Layout from '../layouts/Main'\r\nimport { postContact } from '../api/contact/index'\r\nimport {Formik, Field, FieldProps} from \"formik\"\r\n\r\nimport {SelectField, TextField, Checkbox, CheckboxGroup, RadioButton, RadioButtonGroup} from \"../components/fields/InputField\"\r\n\r\nimport IntroBanner from \"../components/IntroBanner\";\r\n\r\nconst initialFormFields = {pets: [], contactpersoon: '', emailadres: '', bedrijfsnaam: '', telefoonnummer: '', uw_bericht: '', select: \"\", radio: \"\", checkbox: false};\r\n\r\nconst ServiceTypes = {\r\n    \"onderhoud van uw website\": 1,\r\n    \"websoftware een maatwerk systeem special gemaakt op uw behoeftes\": 2,\r\n    c: 3\r\n}\r\n\r\nconst SLAs = {\r\n    \"onderhoud van uw website\": 1,\r\n    \"websoftware een maatwerk systeem special gemaakt op uw behoeftes\": 2,\r\n    c: 3\r\n}\r\n\r\nconst Page = ({}) => {\r\n    return <Layout>\r\n        <IntroBanner title=\"offerte aanvraag\"/>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9\">\r\n\r\n                    <h2>offerteformulier</h2>\r\n                    <Formik onSubmit={(data, actions) => {\r\n                        actions.setSubmitting(true);\r\n                        postForm(data, actions)\r\n                    }} initialValues={initialFormFields}>\r\n\r\n                        {({values, errors, touched, setFieldValue, setFieldTouched, handleChange, handleBlur, handleSubmit, isSubmitting}) => <div>\r\n                            <form onSubmit={handleSubmit} className=\"needs-validation\">\r\n\r\n                                <TextField\r\n                                    name=\"contactpersoon\"\r\n                                    label=\"contactpersoon\"\r\n                                    error={errors.contactpersoon}\r\n                                    value={values.contactpersoon}\r\n                                />\r\n                                <TextField\r\n                                    type=\"email\"\r\n                                    name=\"emailadres\"\r\n                                    label=\"emailadres\"\r\n                                    error={errors.emailadres}\r\n                                    value={values.emailadres} />\r\n                                <TextField\r\n                                    type=\"text\"\r\n                                    name=\"bedrijfsnaam\"\r\n                                    label=\"bedrijfsnaam\"\r\n                                    error={errors.bedrijfsnaam}\r\n                                    value={values.bedrijfsnaam} />\r\n\r\n                                <CheckboxGroup\r\n                                    id=\"pets\"\r\n                                    label=\"naar welke dienst bent u opzoek?\"\r\n                                    value={values.pets}\r\n                                    error={errors.pets}\r\n                                    touched={touched.pets}\r\n                                    onChange={setFieldValue}\r\n                                    onBlur={setFieldTouched}\r\n                                >\r\n                                    {Object.keys(ServiceTypes).map(function(name, index) {\r\n                                        return (\r\n                                            <Field\r\n                                                key={index}\r\n                                                component={Checkbox}\r\n                                                id={name}\r\n                                                label={name}\r\n                                            />\r\n                                        )\r\n                                    })}\r\n                                </CheckboxGroup>\r\n\r\n                                <TextField\r\n                                    type=\"textarea\"\r\n                                    name=\"opmerking\"\r\n                                    label=\"uw_bericht\"\r\n                                    error={errors.uw_bericht}\r\n                                    value={values.uw_bericht} />\r\n\r\n                                <button type=\"submit\" className=\"btn-blue btn btn-block\" disabled={isSubmitting}>Verzenden</button>\r\n\r\n                                <pre>{JSON.stringify(values, null, 2)}</pre>\r\n\r\n\r\n                            </form>\r\n                        </div>}\r\n\r\n                    </Formik>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Layout>\r\n}\r\n\r\nfunction postForm(data, actions) {\r\n    return postContact(data)\r\n        .then((data) => {\r\n            if(typeof data.errors !== 'undefined'){\r\n                Object.keys(data.errors).forEach(function (item) {\r\n                    actions.setFieldError(item, data.errors[item][0])\r\n                });\r\n                return data.errors;\r\n            }else if (data.status == '200'){\r\n                console.log('messages is ontvangen', data)\r\n            }else {\r\n                console.log('something went wrong')\r\n                return {}\r\n            }\r\n        })\r\n        .finally(() => {\r\n            actions.setSubmitting(false)\r\n        })\r\n}\r\n\r\nexport default Page\r\n"]},"metadata":{},"sourceType":"module"}