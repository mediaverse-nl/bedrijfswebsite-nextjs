{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\nimport Layout from '../layouts/Main';\nimport { postContact } from '../api/contact/index';\nimport { Formik, Field, FieldProps } from \"formik\";\nimport fetch from \"isomorphic-fetch\";\nimport InputField from \"../components/fields/InputField\";\nimport IntroBanner from \"../components/IntroBanner\";\nconst initialFormFields = {\n  contactpersoon: '',\n  emailadres: '',\n  bedrijfsnaam: '',\n  telefoonnummer: '',\n  uw_bericht: ''\n};\n\nconst Page = ({}) => {\n  const testArray = {\n    a: 1,\n    b: 2,\n    c: 3\n  };\n  return __jsx(Layout, null, __jsx(IntroBanner, {\n    title: \"contact\"\n  }), __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-9\"\n  }, __jsx(\"h2\", null, \"neem contact met ons op\"), __jsx(\"p\", null, \"Heeft u nog vragen of opmerkingen, vul dan hieronder het contactformulier in. Voor vragen of opmerkingen met spoed mail dan naar helpdesk@xxxxx.nl.\"), __jsx(Formik, {\n    onSubmit: (data, actions) => {\n      actions.setSubmitting(true);\n      postForm(data, actions);\n    },\n    initialValues: initialFormFields\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  }) => __jsx(\"div\", null, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"needs-validation\"\n  }, __jsx(InputField, {\n    type: \"text\",\n    name: \"contactpersoon\",\n    label: \"contactpersoon\",\n    error: errors.contactpersoon,\n    value: values.contactpersoon\n  }), __jsx(InputField, {\n    type: \"email\",\n    name: \"emailadres\",\n    label: \"emailadres\",\n    error: errors.emailadres,\n    value: values.emailadres\n  }), __jsx(InputField, {\n    type: \"text\",\n    name: \"bedrijfsnaam\",\n    label: \"bedrijfsnaam\",\n    error: errors.bedrijfsnaam,\n    value: values.bedrijfsnaam\n  }), __jsx(InputField, {\n    type: \"text\",\n    name: \"uw_bericht\",\n    label: \"uw_bericht\",\n    error: errors.uw_bericht,\n    value: values.uw_bericht\n  }), __jsx(InputField, {\n    type: \"select\",\n    name: \"select\",\n    label: \"select\",\n    values: testArray,\n    error: errors.select,\n    value: values.select\n  }), __jsx(InputField, {\n    type: \"radio\",\n    name: \"radio\",\n    label: \"radio\" // values={testArray}\n    ,\n    error: errors.uw_bericht,\n    value: values.uw_bericht\n  }), __jsx(InputField, {\n    type: \"checkbox\",\n    name: \"checkbox\",\n    label: \"checkbox\",\n    values: testArray,\n    error: errors.checkbox,\n    value: values.checkbox\n  }), __jsx(InputField, {\n    type: \"textarea\",\n    name: \"uw_bericht\",\n    label: \"uw_bericht\",\n    error: errors.uw_bericht,\n    value: values.uw_bericht\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting\n  }, \"Send\"), __jsx(\"input\", {\n    type: \"reset\",\n    value: \"Clear\"\n  }))))), __jsx(\"div\", {\n    className: \"col-md-3\"\n  }))));\n};\n\nfunction postForm(data, actions) {\n  return postContact(data).then(data => {\n    if (typeof data.errors !== 'undefined') {\n      Object.keys(data.errors).forEach(function (item) {\n        actions.setFieldError(item, data.errors[item][0]);\n      });\n      return data.errors;\n    } else if (data.status == '200') {\n      console.log('messages is ontvangen', data);\n    } else {\n      console.log('something went wrong');\n      return {};\n    }\n  }).finally(() => {\n    actions.setSubmitting(false);\n  });\n}\n\nexport default Page;","map":{"version":3,"sources":["C:/Projects/bedrijfswebsite-nextjs/pages/contact.js"],"names":["withRouter","Layout","postContact","Formik","Field","FieldProps","fetch","InputField","IntroBanner","initialFormFields","contactpersoon","emailadres","bedrijfsnaam","telefoonnummer","uw_bericht","Page","testArray","a","b","c","data","actions","setSubmitting","postForm","values","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","select","checkbox","then","Object","keys","forEach","item","setFieldError","status","console","log","finally"],"mappings":"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","sourcesContent":["import { withRouter } from 'next/router'\r\nimport Layout from '../layouts/Main'\r\nimport { postContact } from '../api/contact/index'\r\nimport {Formik, Field, FieldProps} from \"formik\"\r\nimport fetch from \"isomorphic-fetch\";\r\n\r\nimport InputField from \"../components/fields/InputField\"\r\n\r\nimport IntroBanner from \"../components/IntroBanner\";\r\n\r\nconst initialFormFields = {contactpersoon: '', emailadres: '', bedrijfsnaam: '', telefoonnummer: '', uw_bericht: ''};\r\n\r\nconst Page = ({}) => {\r\n    const testArray = {a: 1, b: 2, c: 3}\r\n\r\n    return <Layout>\r\n\r\n        <IntroBanner title=\"contact\"/>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9\">\r\n                    <h2>neem contact met ons op</h2>\r\n                    <p>Heeft u nog vragen of opmerkingen, vul dan hieronder het contactformulier in.\r\n                        Voor vragen of opmerkingen met spoed mail dan naar helpdesk@xxxxx.nl.</p>\r\n                    <Formik onSubmit={(data, actions) => {\r\n                            actions.setSubmitting(true);\r\n                            postForm(data, actions)\r\n                        }}\r\n                        initialValues={initialFormFields}>\r\n\r\n                        {({values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting}) => <div>\r\n                            <form onSubmit={handleSubmit} className=\"needs-validation\">\r\n                                <InputField\r\n                                    type=\"text\"\r\n                                    name=\"contactpersoon\"\r\n                                    label=\"contactpersoon\"\r\n                                    error={errors.contactpersoon}\r\n                                    value={values.contactpersoon} />\r\n\r\n                                <InputField\r\n                                    type=\"email\"\r\n                                    name=\"emailadres\"\r\n                                    label=\"emailadres\"\r\n                                    error={errors.emailadres}\r\n                                    value={values.emailadres} />\r\n\r\n                                <InputField\r\n                                    type=\"text\"\r\n                                    name=\"bedrijfsnaam\"\r\n                                    label=\"bedrijfsnaam\"\r\n                                    error={errors.bedrijfsnaam}\r\n                                    value={values.bedrijfsnaam} />\r\n\r\n                                <InputField\r\n                                    type=\"text\"\r\n                                    name=\"uw_bericht\"\r\n                                    label=\"uw_bericht\"\r\n                                    error={errors.uw_bericht}\r\n                                    value={values.uw_bericht} />\r\n\r\n                                <InputField\r\n                                    type=\"select\"\r\n                                    name=\"select\"\r\n                                    label=\"select\"\r\n                                    values={testArray}\r\n                                    error={errors.select}\r\n                                    value={values.select} />\r\n\r\n                                <InputField\r\n                                    type=\"radio\"\r\n                                    name=\"radio\"\r\n                                    label=\"radio\"\r\n                                    // values={testArray}\r\n                                    error={errors.uw_bericht}\r\n                                    value={values.uw_bericht} />\r\n\r\n                                <InputField\r\n                                    type=\"checkbox\"\r\n                                    name=\"checkbox\"\r\n                                    label=\"checkbox\"\r\n                                    values={testArray}\r\n                                    error={errors.checkbox}\r\n                                    value={values.checkbox} />\r\n\r\n                                <InputField\r\n                                    type=\"textarea\"\r\n                                    name=\"uw_bericht\"\r\n                                    label=\"uw_bericht\"\r\n                                    error={errors.uw_bericht}\r\n                                    value={values.uw_bericht} />\r\n\r\n                                {/*<div className=\"form-group\">*/}\r\n                                {/*    <label>uw_bericht</label>*/}\r\n                                {/*    <input  type=\"text\"*/}\r\n                                {/*            name=\"uw_bericht\"*/}\r\n                                {/*            onChange={handleChange}*/}\r\n                                {/*            // onBlur={handleBlur}*/}\r\n                                {/*            value={values.uw_bericht}*/}\r\n                                {/*            className={`form-control ${errors.uw_bericht && touched.uw_bericht ? 'is-invalid' : ''}`}*/}\r\n                                {/*    />*/}\r\n                                {/*    {errors.uw_bericht && touched.uw_bericht &&*/}\r\n                                {/*        <div style={{color: \"red\"}} className=\"invalid-feedback\">{errors.uw_bericht}</div>*/}\r\n                                {/*    }*/}\r\n                                {/*</div>*/}\r\n\r\n                                <button type=\"submit\" disabled={isSubmitting}>Send</button>\r\n                                <input type=\"reset\" value=\"Clear\" />\r\n                            </form>\r\n                        </div>}\r\n\r\n                    </Formik>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Layout>\r\n}\r\n\r\nfunction postForm(data, actions) {\r\n    return postContact(data)\r\n        .then((data) => {\r\n            if(typeof data.errors !== 'undefined'){\r\n                Object.keys(data.errors).forEach(function (item) {\r\n                    actions.setFieldError(item, data.errors[item][0])\r\n                });\r\n                return data.errors;\r\n            }else if (data.status == '200'){\r\n                console.log('messages is ontvangen', data)\r\n            }else {\r\n                console.log('something went wrong')\r\n                return {}\r\n            }\r\n        })\r\n        .finally(() => {\r\n            actions.setSubmitting(false)\r\n        })\r\n}\r\n\r\nexport default Page\r\n"]},"metadata":{},"sourceType":"module"}