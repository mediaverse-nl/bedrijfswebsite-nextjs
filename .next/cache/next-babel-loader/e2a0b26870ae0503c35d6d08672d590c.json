{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from '../layouts/Main';\nimport IntroBanner from \"../components/IntroBanner\";\nimport { Field } from \"formik\";\nimport { InputField } from \"../components/fields/InputField\";\nimport ReferenceCard from \"../components/ReferenceCard\"; // import { getReferences } from '../api/reference/index'\n\nimport fetch from \"isomorphic-fetch\";\n\nfunction Page(_ref) {\n  var data = _ref.data;\n  console.log(data);\n  return __jsx(Layout, null, __jsx(IntroBanner, {\n    title: \"Referenties\"\n  }), __jsx(\"div\", {\n    className: \"container pt-2 pb-5\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  })));\n}\n\nPage.getServerSideProps = function _callee(ctx) {\n  var res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.github.com/repos/zeit/next.js'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: json\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}; // // This also gets called at build time\n// export async function getServerSideProps() {\n//\n//     const res = await fetch(`/proxy/api/auth/reference`)\n//     const data = await res.json()\n//\n//     // Pass post data to the page via props\n//     return { props: { data  } }\n// }\n// Page.getStaticProps   = async ({ req }) => {\n//     const res = await getReferences()\n//     const json = await res.json()\n//     // return {  }\n//     return { data: json.data }\n// }\n\n\nexport default Page;","map":null,"metadata":{},"sourceType":"module"}