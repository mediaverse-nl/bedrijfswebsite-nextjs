{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Field } from \"formik\";\nexport default class InputField extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"field\", props => {\n      return __jsx(\"div\", null, props.label && __jsx(\"label\", {\n        htmlFor: props.id\n      }, props.label), __jsx(Field, {\n        onChange: props.handleChange,\n        onBlur: props.handleBlur,\n        value: props.value,\n        className: `form-control ${props.error ? 'is-invalid' : ''}`\n      }), props.error && __jsx(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        className: \"invalid-feedback\"\n      }, props.error));\n    });\n  }\n\n  render() {\n    const componentToRender = this.props.component;\n    return __jsx(Field, _extends({}, this.props, componentToRender, {\n      component: this.field\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Projects/bedrijfswebsite-nextjs/components/fields/InputField.js"],"names":["React","Field","InputField","Component","props","label","id","handleChange","handleBlur","value","error","color","render","componentToRender","component","field"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,QAApB;AAEA,eAAe,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AAAA;AAAA;;AAAA,mCAC5CC,KAAK,IAAI;AACb,aACI,mBACKA,KAAK,CAACC,KAAN,IAAe;AAAO,QAAA,OAAO,EAAED,KAAK,CAACE;AAAtB,SAA2BF,KAAK,CAACC,KAAjC,CADpB,EAEI,MAAC,KAAD;AACI,QAAA,QAAQ,EAAED,KAAK,CAACG,YADpB;AAEI,QAAA,MAAM,EAAEH,KAAK,CAACI,UAFlB;AAGI,QAAA,KAAK,EAAEJ,KAAK,CAACK,KAHjB;AAII,QAAA,SAAS,EAAG,gBAAeL,KAAK,CAACM,KAAN,GAAc,YAAd,GAA6B,EAAG;AAJ/D,QAFJ,EAQKN,KAAK,CAACM,KAAN,IACG;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAZ;AAA4B,QAAA,SAAS,EAAC;AAAtC,SAA0DP,KAAK,CAACM,KAAhE,CATR,CADJ;AAcH,KAhBmD;AAAA;;AAiBpDE,EAAAA,MAAM,GAAG;AAEL,UAAMC,iBAAiB,GAAG,KAAKT,KAAL,CAAWU,SAArC;AAEA,WAAO,MAAC,KAAD,eAAW,KAAKV,KAAhB,EAA2BS,iBAA3B;AAA8C,MAAA,SAAS,EAAE,KAAKE;AAA9D,OAAP;AACH;;AAtBmD","sourcesContent":["import React from \"react\";\r\nimport {Field} from \"formik\"\r\n\r\nexport default class InputField extends React.Component {\r\n    field = props => {\r\n        return (\r\n            <div>\r\n                {props.label && <label htmlFor={props.id}>{props.label}</label>}\r\n                <Field \r\n                    onChange={props.handleChange}\r\n                    onBlur={props.handleBlur}\r\n                    value={props.value}\r\n                    className={`form-control ${props.error ? 'is-invalid' : ''}`}\r\n                />\r\n                {props.error &&\r\n                    <div style={{color: \"red\"}} className=\"invalid-feedback\">{props.error}</div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n    render() {\r\n\r\n        const componentToRender = this.props.component;\r\n\r\n        return <Field {...this.props} {...componentToRender} component={this.field} />;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}