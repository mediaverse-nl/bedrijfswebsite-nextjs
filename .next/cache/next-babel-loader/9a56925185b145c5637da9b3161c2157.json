{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\nimport Layout from '../layouts/Main';\nimport { postContact } from '../api/contact/index';\nimport { Formik, FieldProps } from \"formik\";\nimport fetch from \"isomorphic-fetch\"; //\n// Page.getInitialProps = async ({ query }) => {\n//     const res = await getCategories()\n//     const json = await res.json()\n//\n//     return { categories: json.data }\n// }\n\nasync function postContactForm(body) {\n  const res = await postContact(body);\n  const json = await res.json();\n  return json;\n}\n\nconst Page = ({}) => {\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"jumbotron\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"h1\", {\n    className: \"display-3 text-center\"\n  }, \"Contact\"))), __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-9\"\n  }, __jsx(\"h2\", null, \"neem contact met ons op\"), __jsx(\"p\", null, \"Heeft u nog vragen of opmerkingen, vul dan hieronder het contactformulier in. Voor vragen of opmerkingen met spoed mail dan naar helpdesk@xxxxx.nl.\"), __jsx(Formik, {\n    onSubmit: (data, actions) => {\n      // const test = postContactForm(data)\n      //     .then(response => {\n      //         console.log('no error but')\n      //         return response;\n      //     })\n      //\n      // console.log(test.json())\n      let arr = [];\n      fetch(\"http://localhost:3000/test/api/auth/contact\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          \"Content-Type\": \"application/json\"\n        },\n        cache: 'default',\n        mode: 'cors',\n        body: JSON.stringify(data)\n      }).then(response => {\n        actions.setFieldError('general', 'test test test');\n        const error = response;\n        console.log('test test test:', error);\n        return error.json();\n      }).then(data => {\n        arr.push(data);\n        console.log('Successssssssss:', data);\n      }).catch(error => {\n        console.error('Error:', error);\n      }).finally(() => {\n        actions.setSubmitting(false);\n      });\n      console.log('array ', arr.messages); //\n      // text().then(data => {\n      //     response.json({ message: 'Request received!', data.data })\n      // })\n      // console.log('text text', text)\n      // console.log('actions', actions)\n      // console.log('data', data)\n      // const res = await postContact(data,actions)\n      // const json = await res\n      // console.log('res', JSON.stringify(res));\n      // console.log('content', JSON.stringify(json));\n      // // actions.setFieldError('content', content);\n      // actions.setFieldError('contactpersoon', 'test test test');\n      // actions.setFieldError('emailadres', 'test test test');\n    },\n    initialValues: {\n      contactpersoon: '',\n      emailadres: '',\n      bedrijfsnaam: '',\n      telefoonnummer: '',\n      uw_bericht: ''\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  }) => __jsx(\"div\", null, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"contactpersoon\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"contactpersoon\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.contactpersoon,\n    className: \"form-control\"\n  }), __jsx(\"div\", {\n    className: \"valid-tooltip\"\n  }, errors.contactpersoon && touched.contactpersoon ? __jsx(\"div\", null, \" asdadasd\") : null)), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Email address\"), __jsx(\"input\", {\n    type: \"email\",\n    name: \"emailadres\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.emailadres,\n    className: \"form-control\"\n  }), errors.emailadres && touched.emailadres && __jsx(\"div\", null, errors.emailadres), __jsx(\"div\", {\n    className: \"valid-tooltip\"\n  }, \"Looks good!\")), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"bedrijfsnaam\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"bedrijfsnaam\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.bedrijfsnaam,\n    className: \"form-control\"\n  }), \"                                    \", __jsx(\"div\", {\n    className: \"valid-tooltip\"\n  }, \"Looks good!\")), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"telefoonnummer\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"telefoonnummer\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.telefoonnummer,\n    className: \"form-control\"\n  }), __jsx(\"div\", {\n    className: \"valid-tooltip\"\n  }, \"Looks good!\")), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"uw_bericht\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"uw_bericht\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.uw_bericht,\n    className: \"form-control\"\n  }), __jsx(\"div\", {\n    className: \"valid-tooltip\"\n  })), JSON.stringify(values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"Send\"), __jsx(\"input\", {\n    type: \"reset\",\n    value: \"Clear\"\n  }))))), __jsx(\"div\", {\n    className: \"col-md-3\"\n  }))));\n};\n\nexport default Page;","map":{"version":3,"sources":["C:/Projects/bedrijfswebsite-nextjs/pages/contact.js"],"names":["withRouter","Layout","postContact","Formik","FieldProps","fetch","postContactForm","body","res","json","Page","data","actions","arr","method","headers","cache","mode","JSON","stringify","then","response","setFieldError","error","console","log","push","catch","finally","setSubmitting","messages","contactpersoon","emailadres","bedrijfsnaam","telefoonnummer","uw_bericht","values","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAAQC,MAAR,EAAgBC,UAAhB,QAAiC,QAAjC;AACA,OAAOC,KAAP,MAAkB,kBAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeC,eAAf,CAA+BC,IAA/B,EAAqC;AAEjC,QAAMC,GAAG,GAAG,MAAMN,WAAW,CAACK,IAAD,CAA7B;AACA,QAAME,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAnB;AAGA,SAAOA,IAAP;AACH;;AAGD,MAAMC,IAAI,GAAG,CAAC,EAAD,KAAQ;AAEjB,SAAO,MAAC,MAAD,QACH;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAI,IAAA,SAAS,EAAC;AAAd,eADJ,CADJ,CADG,EAOH;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,4CADJ,EAEI,uKAFJ,EAII,MAAC,MAAD;AACI,IAAA,QAAQ,EAAE,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,UAAIC,GAAG,GAAG,EAAV;AACAR,MAAAA,KAAK,CAAC,6CAAD,EAAgD;AACjDS,QAAAA,MAAM,EAAE,MADyC;AAEjDC,QAAAA,OAAO,EAAE;AACL,oBAAS,kBADJ;AAEL,0BAAgB;AAFX,SAFwC;AAMjDC,QAAAA,KAAK,EAAE,SAN0C;AAOjDC,QAAAA,IAAI,EAAE,MAP2C;AAQjDV,QAAAA,IAAI,EAAEW,IAAI,CAACC,SAAL,CAAeR,IAAf;AAR2C,OAAhD,CAAL,CAUCS,IAVD,CAUOC,QAAD,IAAc;AAChBT,QAAAA,OAAO,CAACU,aAAR,CAAsB,SAAtB,EAAiC,gBAAjC;AAEA,cAAMC,KAAK,GAAGF,QAAd;AAEAG,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAA/B;AACA,eAAOA,KAAK,CAACd,IAAN,EAAP;AACH,OAjBD,EAkBCW,IAlBD,CAkBOT,IAAD,IAAU;AACZE,QAAAA,GAAG,CAACa,IAAJ,CAASf,IAAT;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCd,IAAhC;AACH,OArBD,EAsBCgB,KAtBD,CAsBQJ,KAAD,IAAW;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACH,OAxBD,EAyBCK,OAzBD,CAyBS,MAAM;AACXhB,QAAAA,OAAO,CAACiB,aAAR,CAAsB,KAAtB;AACH,OA3BD;AA6BAL,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBZ,GAAG,CAACiB,QAA1B,EAvCyB,CAwCzB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAxDL;AAyDI,IAAA,aAAa,EAAE;AAACC,MAAAA,cAAc,EAAE,EAAjB;AAAqBC,MAAAA,UAAU,EAAE,EAAjC;AAAqCC,MAAAA,YAAY,EAAE,EAAnD;AAAuDC,MAAAA,cAAc,EAAE,EAAvE;AAA2EC,MAAAA,UAAU,EAAE;AAAvF;AAzDnB,KA2DK,CAAC;AAACC,IAAAA,MAAD;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA,YAA1B;AAAwCC,IAAAA,UAAxC;AAAoDC,IAAAA,YAApD;AAAkEC,IAAAA;AAAlE,GAAD,KAAqF,mBAClF;AAAM,IAAA,QAAQ,EAAED;AAAhB,KAII;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,sCADJ,EAGI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,gBAFT;AAGI,IAAA,QAAQ,EAAEF,YAHd;AAII,IAAA,MAAM,EAAEC,UAJZ;AAKI,IAAA,KAAK,EAAEJ,MAAM,CAACL,cALlB;AAMI,IAAA,SAAS,EAAC;AANd,IAHJ,EAWI;AAAK,IAAA,SAAS,EAAC;AAAf,KAEKM,MAAM,CAACN,cAAP,IAAyBO,OAAO,CAACP,cAAjC,GACG,+BADH,GAEG,IAJR,CAXJ,CAJJ,EAsBI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,qCADJ,EAGI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,YAFT;AAGI,IAAA,QAAQ,EAAEQ,YAHd;AAII,IAAA,MAAM,EAAEC,UAJZ;AAKI,IAAA,KAAK,EAAEJ,MAAM,CAACJ,UALlB;AAMI,IAAA,SAAS,EAAC;AANd,IAHJ,EAWKK,MAAM,CAACL,UAAP,IAAqBM,OAAO,CAACN,UAA7B,IAA2C,mBAAMK,MAAM,CAACL,UAAb,CAXhD,EAaI;AAAK,IAAA,SAAS,EAAC;AAAf,mBAbJ,CAtBJ,EAuCI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,oCADJ,EAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,cAFT;AAGI,IAAA,QAAQ,EAAEO,YAHd;AAII,IAAA,MAAM,EAAEC,UAJZ;AAKI,IAAA,KAAK,EAAEJ,MAAM,CAACH,YALlB;AAMI,IAAA,SAAS,EAAC;AANd,IAFJ,0CAS0C;AAAK,IAAA,SAAS,EAAC;AAAf,mBAT1C,CAvCJ,EAoDI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,sCADJ,EAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,gBAFT;AAGI,IAAA,QAAQ,EAAEM,YAHd;AAII,IAAA,MAAM,EAAEC,UAJZ;AAKI,IAAA,KAAK,EAAEJ,MAAM,CAACF,cALlB;AAMI,IAAA,SAAS,EAAC;AANd,IAFJ,EAUI;AAAK,IAAA,SAAS,EAAC;AAAf,mBAVJ,CApDJ,EAkEI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,kCADJ,EAEI;AAAQ,IAAA,IAAI,EAAC,MAAb;AACQ,IAAA,IAAI,EAAC,YADb;AAEQ,IAAA,QAAQ,EAAEK,YAFlB;AAGQ,IAAA,MAAM,EAAEC,UAHhB;AAIQ,IAAA,KAAK,EAAEJ,MAAM,CAACD,UAJtB;AAKQ,IAAA,SAAS,EAAC;AALlB,IAFJ,EASI;AAAK,IAAA,SAAS,EAAC;AAAf,IATJ,CAlEJ,EA8EKjB,IAAI,CAACC,SAAL,CAAeiB,MAAf,EAAuBC,MAAvB,EAA+BC,OAA/B,EAAwCC,YAAxC,EAAsDC,UAAtD,EAAkEC,YAAlE,EAAgFC,YAAhF,CA9EL,EAgFI;AAAQ,IAAA,IAAI,EAAC;AAAb,YAhFJ,EAiFI;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,KAAK,EAAC;AAA1B,IAjFJ,CADkF,CA3D1F,CAJJ,CADJ,EA2JI;AAAK,IAAA,SAAS,EAAC;AAAf,IA3JJ,CADJ,CAPG,CAAP;AA0KH,CA5KD;;AA8KA,eAAehC,IAAf","sourcesContent":["import { withRouter } from 'next/router'\r\nimport Layout from '../layouts/Main'\r\nimport { postContact } from '../api/contact/index'\r\nimport {Formik, FieldProps} from \"formik\"\r\nimport fetch from \"isomorphic-fetch\";\r\n\r\n//\r\n// Page.getInitialProps = async ({ query }) => {\r\n//     const res = await getCategories()\r\n//     const json = await res.json()\r\n//\r\n//     return { categories: json.data }\r\n// }\r\nasync function postContactForm(body) {\r\n\r\n    const res = await postContact(body)\r\n    const json = await res.json()\r\n\r\n\r\n    return json;\r\n}\r\n\r\n\r\nconst Page = ({}) => {\r\n\r\n    return <Layout>\r\n        <div className=\"jumbotron\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-3 text-center\">Contact</h1>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9\">\r\n                    <h2>neem contact met ons op</h2>\r\n                    <p>Heeft u nog vragen of opmerkingen, vul dan hieronder het contactformulier in.\r\n                        Voor vragen of opmerkingen met spoed mail dan naar helpdesk@xxxxx.nl.</p>\r\n                    <Formik\r\n                        onSubmit={(data, actions) => {\r\n                            // const test = postContactForm(data)\r\n                            //     .then(response => {\r\n                            //         console.log('no error but')\r\n                            //         return response;\r\n                            //     })\r\n                            //\r\n                            // console.log(test.json())\r\n\r\n                            let arr = [];\r\n                            fetch(\"http://localhost:3000/test/api/auth/contact\", {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Accept':'application/json',\r\n                                    \"Content-Type\": \"application/json\",\r\n                                },\r\n                                cache: 'default',\r\n                                mode: 'cors',\r\n                                body: JSON.stringify(data)\r\n                            })\r\n                            .then((response) => {\r\n                                actions.setFieldError('general', 'test test test')\r\n\r\n                                const error = response;\r\n\r\n                                console.log('test test test:', error);\r\n                                return error.json()\r\n                            })\r\n                            .then((data) => {\r\n                                arr.push(data)\r\n                                console.log('Successssssssss:', data);\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error:', error);\r\n                            })\r\n                            .finally(() => {\r\n                                actions.setSubmitting(false)\r\n                            })\r\n\r\n                            console.log('array ', arr.messages)\r\n                            //\r\n                            // text().then(data => {\r\n                            //     response.json({ message: 'Request received!', data.data })\r\n                            // })\r\n                            // console.log('text text', text)\r\n\r\n                            // console.log('actions', actions)\r\n                            // console.log('data', data)\r\n                            // const res = await postContact(data,actions)\r\n                            // const json = await res\r\n                            // console.log('res', JSON.stringify(res));\r\n                            // console.log('content', JSON.stringify(json));\r\n                            // // actions.setFieldError('content', content);\r\n                            // actions.setFieldError('contactpersoon', 'test test test');\r\n                            // actions.setFieldError('emailadres', 'test test test');\r\n                        }}\r\n                        initialValues={{contactpersoon: '', emailadres: '', bedrijfsnaam: '', telefoonnummer: '', uw_bericht: ''}}\r\n                    >\r\n                        {({values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting}) => <div>\r\n                            <form onSubmit={handleSubmit}>\r\n\r\n                                {/*<Field name=\"email\" component={InputField} />*/}\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>contactpersoon</label>\r\n\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"contactpersoon\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.contactpersoon}\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                    <div className=\"valid-tooltip\">\r\n                                        {/*{JSON.stringify(handleSubmit)}*/}\r\n                                        {errors.contactpersoon && touched.contactpersoon ? (\r\n                                            <div> asdadasd</div>\r\n                                        ) : null}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Email address</label>\r\n\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        name=\"emailadres\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.emailadres}\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                    {errors.emailadres && touched.emailadres && <div>{errors.emailadres}</div>}\r\n\r\n                                    <div className=\"valid-tooltip\">\r\n                                        Looks good!\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>bedrijfsnaam</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"bedrijfsnaam\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.bedrijfsnaam}\r\n                                        className=\"form-control\"\r\n                                    />                                    <div className=\"valid-tooltip\">\r\n                                        Looks good!\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>telefoonnummer</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"telefoonnummer\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.telefoonnummer}\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                    <div className=\"valid-tooltip\">\r\n                                        Looks good!\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>uw_bericht</label>\r\n                                    <input  type=\"text\"\r\n                                            name=\"uw_bericht\"\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.uw_bericht}\r\n                                            className=\"form-control\"\r\n                                    />\r\n                                    <div className=\"valid-tooltip\">\r\n                                    </div>\r\n                                </div>\r\n                                {JSON.stringify(values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting)}\r\n\r\n                                <button type=\"submit\" >Send</button>\r\n                                <input type=\"reset\" value=\"Clear\" />\r\n                            </form>\r\n                        </div>}\r\n\r\n                    </Formik>\r\n\r\n\r\n\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </Layout>\r\n}\r\n\r\nexport default Page\r\n"]},"metadata":{},"sourceType":"module"}