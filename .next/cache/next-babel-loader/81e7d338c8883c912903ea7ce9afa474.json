{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useRouter } from 'next/router';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport React, { Children } from 'react';\n\nconst ActiveLink = (_ref) => {\n  let {\n    children,\n    activeClassName\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"activeClassName\"]);\n\n  console.log('props', props);\n  const {\n    pathname\n  } = useRouter();\n  const child = Children.only(children);\n  const childClassName = child.props.className || '';\n  const className = ''; // pathname === props.href\n  //     ? `${childClassName} ${activeClassName}`.trim()\n  //     : childClassName\n\n  return __jsx(Link, props, React.cloneElement(child, {\n    className: className || null\n  }));\n};\n\nActiveLink.propTypes = {\n  activeClassName: PropTypes.string.isRequired\n};\nexport default ActiveLink;","map":{"version":3,"sources":["C:/Projects/bedrijfswebsite-nextjs/components/ActiveLink.js"],"names":["useRouter","PropTypes","Link","React","Children","ActiveLink","children","activeClassName","props","console","log","pathname","child","only","childClassName","className","cloneElement","propTypes","string","isRequired"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,UAAU,GAAG,UAA6C;AAAA,MAA5C;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA4C;AAAA,MAAZC,KAAY;;AAC5DC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AAEA,QAAM;AAAEG,IAAAA;AAAF,MAAeX,SAAS,EAA9B;AACA,QAAMY,KAAK,GAAGR,QAAQ,CAACS,IAAT,CAAcP,QAAd,CAAd;AACA,QAAMQ,cAAc,GAAGF,KAAK,CAACJ,KAAN,CAAYO,SAAZ,IAAyB,EAAhD;AAEA,QAAMA,SAAS,GAAG,EAAlB,CAP4D,CAQxD;AACA;AACA;;AAEJ,SACI,MAAC,IAAD,EAAUP,KAAV,EACKL,KAAK,CAACa,YAAN,CAAmBJ,KAAnB,EAA0B;AACvBG,IAAAA,SAAS,EAAEA,SAAS,IAAI;AADD,GAA1B,CADL,CADJ;AAOH,CAnBD;;AAqBAV,UAAU,CAACY,SAAX,GAAuB;AACnBV,EAAAA,eAAe,EAAEN,SAAS,CAACiB,MAAV,CAAiBC;AADf,CAAvB;AAIA,eAAed,UAAf","sourcesContent":["import { useRouter } from 'next/router'\r\nimport PropTypes from 'prop-types'\r\nimport Link from 'next/link'\r\nimport React, { Children } from 'react'\r\n\r\nconst ActiveLink = ({ children, activeClassName, ...props }) => {\r\n    console.log('props', props)\r\n\r\n    const { pathname } = useRouter()\r\n    const child = Children.only(children)\r\n    const childClassName = child.props.className || ''\r\n\r\n    const className = ''\r\n        // pathname === props.href\r\n        //     ? `${childClassName} ${activeClassName}`.trim()\r\n        //     : childClassName\r\n\r\n    return (\r\n        <Link {...props}>\r\n            {React.cloneElement(child, {\r\n                className: className || null\r\n            })}\r\n        </Link>\r\n    )\r\n}\r\n\r\nActiveLink.propTypes = {\r\n    activeClassName: PropTypes.string.isRequired\r\n}\r\n\r\nexport default ActiveLink"]},"metadata":{},"sourceType":"module"}