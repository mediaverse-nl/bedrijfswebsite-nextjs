{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Field } from 'formik';\n\nvar TextInputWrappedInternal = /*#__PURE__*/function (_Component) {\n  _inherits(TextInputWrappedInternal, _Component);\n\n  function TextInputWrappedInternal(props) {\n    var _this;\n\n    _classCallCheck(this, TextInputWrappedInternal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextInputWrappedInternal).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      var _this$props = _this.props,\n          name = _this$props.field.name,\n          handleChange = _this$props.form.handleChange;\n      handleChange(event);\n    });\n\n    return _this;\n  }\n\n  _createClass(TextInputWrappedInternal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          field = _this$props2.field,\n          label = _this$props2.label;\n      var inputProps = Object.assign({}, this.props);\n      delete inputProps.form;\n      delete inputProps.label;\n      delete inputProps.field;\n      delete inputProps.error;\n      return __jsx(\"div\", {\n        className: \"form-group\"\n      }, this.props.label && __jsx(\"label\", {\n        htmlFor: this.props.id\n      }, label), this.props.type == \"text\" && __jsx(\"input\", _extends({\n        onChange: this.handleChange,\n        id: label,\n        value: field.value,\n        name: field.name\n      }, inputProps, {\n        className: \"form-control\".concat(this.props.error ? ' is-invalid' : '')\n      })), this.props.type == \"textarea\" && __jsx(\"textarea\", _extends({\n        onChange: this.handleChange,\n        id: label,\n        value: field.value,\n        name: field.name\n      }, inputProps, {\n        className: \"form-control\".concat(this.props.error ? ' is-invalid' : '')\n      })), this.props.type == \"select\" && __jsx(\"select\", _extends({\n        onChange: this.handleChange,\n        id: label,\n        value: field.value,\n        name: field.name\n      }, inputProps, {\n        className: \"form-control\".concat(this.props.error ? ' is-invalid' : '')\n      }), __jsx(\"option\", {\n        value: \"test\"\n      }, \"test\")), this.props.type == \"check\" && __jsx(\"div\", {\n        className: \"form-check\"\n      }, __jsx(\"input\", {\n        className: \"form-check-input\",\n        type: \"checkbox\",\n        value: \"\",\n        id: \"defaultCheck2\",\n        disabled: true\n      }), __jsx(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"defaultCheck2\"\n      }, \"Disabled checkbox\")), this.props.error && __jsx(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        className: \"invalid-feedback\"\n      }, this.props.error));\n    }\n  }]);\n\n  return TextInputWrappedInternal;\n}(Component);\n\nexport default (function (props) {\n  return __jsx(Field, _extends({\n    component: TextInputWrappedInternal\n  }, props));\n});","map":{"version":3,"sources":["C:/Projects/bedrijfswebsite-nextjs/components/fields/InputField.js"],"names":["React","Component","Field","TextInputWrappedInternal","props","event","name","field","handleChange","form","label","inputProps","Object","assign","error","id","type","value","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Field } from 'formik';\r\n\r\nclass TextInputWrappedInternal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleChange = event => {\r\n        const {\r\n            field: { name },\r\n            form: { handleChange }\r\n        } = this.props;\r\n\r\n        handleChange(event);\r\n    };\r\n\r\n    render() {\r\n        const {field, label} = this.props;\r\n\r\n        const inputProps = Object.assign({}, this.props);\r\n\r\n        delete inputProps.form;\r\n        delete inputProps.label;\r\n        delete inputProps.field;\r\n        delete inputProps.error;\r\n\r\n        return (\r\n            <div className=\"form-group\">\r\n                {this.props.label &&\r\n                    <label htmlFor={this.props.id}>{label}</label>\r\n                }\r\n                {this.props.type == \"text\" &&\r\n                    <input\r\n                        onChange={this.handleChange} id={label} value={field.value} name={field.name} {...inputProps}\r\n                        className={`form-control${this.props.error ? ' is-invalid' : ''}`}\r\n                    />\r\n                }\r\n                {this.props.type == \"textarea\" &&\r\n                    <textarea\r\n                        onChange={this.handleChange} id={label} value={field.value} name={field.name} {...inputProps}\r\n                        className={`form-control${this.props.error ? ' is-invalid' : ''}`}\r\n                    />\r\n                }\r\n                {this.props.type == \"select\" &&\r\n                    <select\r\n                        onChange={this.handleChange} id={label} value={field.value} name={field.name} {...inputProps}\r\n                        className={`form-control${this.props.error ? ' is-invalid' : ''}`}\r\n                    >\r\n                        <option value=\"test\">test</option>\r\n                    </select>\r\n                }\r\n                {this.props.type == \"check\" &&\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck2\" disabled />\r\n                        <label className=\"form-check-label\" htmlFor=\"defaultCheck2\">\r\n                            Disabled checkbox\r\n                        </label>\r\n                    </div>\r\n                }\r\n                {this.props.error &&\r\n                    <div style={{color: \"red\"}} className=\"invalid-feedback\">\r\n                        {this.props.error}\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default props => <Field component={TextInputWrappedInternal} {...props} />;\r\n"]},"metadata":{},"sourceType":"module"}