{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../layouts/Main';\nimport { postContact } from '../api/contact/index';\nimport { Formik, Field, FieldProps } from \"formik\";\nimport { SelectField, TextField, Checkbox, CheckboxGroup, RadioButton, RadioButtonGroup } from \"../components/fields/InputField\";\nimport IntroBanner from \"../components/IntroBanner\";\nvar initialFormFields = {\n  diensten: [],\n  contactpersoon: '',\n  emailadres: '',\n  bedrijfsnaam: '',\n  telefoonnummer: '',\n  uw_bericht: '',\n  select: \"\",\n  radio: \"\",\n  checkbox: false\n};\nvar ServiceTypes = {\n  \"onderhoud van uw bestaande website en of webshop\": 1,\n  \"websoftware een maatwerk systeem special gemaakt op uw bedrijfs behoeftes\": 2,\n  \"e-commerce web applicatie incl. (ideal, CMS, product management en ERP)\": 3\n};\nvar SLAs = {\n  \"wilt u een hosting pakket voor uw applicatie('s)?\": 1,\n  \"wilt u een zakelijk voip telefoon nummer?\": 2,\n  \"wilt u iemand die uw content management?\": 3,\n  \"wilt u blijven invensteren om de website over tijd beter te maken voor (CTA) call to action?\": 4\n};\n\nvar Page = function Page(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var onSubmitForm = function onSubmitForm(data, actions) {\n    actions.setSubmitting(true);\n    postForm(data, actions);\n  };\n\n  return __jsx(Layout, null, __jsx(IntroBanner, {\n    title: \"offerte aanvraag\"\n  }), __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-9\"\n  }, __jsx(\"h2\", null, \"offerteformulier\"), __jsx(Formik, {\n    onSubmit: onSubmitForm,\n    initialValues: initialFormFields\n  }, function (_ref2) {\n    var values = _ref2.values,\n        errors = _ref2.errors,\n        touched = _ref2.touched,\n        setFieldValue = _ref2.setFieldValue,\n        setFieldTouched = _ref2.setFieldTouched,\n        handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        isSubmitting = _ref2.isSubmitting;\n    return __jsx(\"div\", null, __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"needs-validation\"\n    }, __jsx(TextField, {\n      name: \"contactpersoon\",\n      label: \"contactpersoon\",\n      error: errors.contactpersoon,\n      value: values.contactpersoon\n    }), __jsx(TextField, {\n      type: \"email\",\n      name: \"emailadres\",\n      label: \"emailadres\",\n      error: errors.emailadres,\n      value: values.emailadres\n    }), __jsx(TextField, {\n      type: \"text\",\n      name: \"bedrijfsnaam\",\n      label: \"bedrijfsnaam\",\n      error: errors.bedrijfsnaam,\n      value: values.bedrijfsnaam\n    }), __jsx(TextField, {\n      type: \"textarea\",\n      name: \"opmerking\",\n      label: \"uw_bericht\",\n      error: errors.uw_bericht,\n      value: values.uw_bericht\n    }), __jsx(\"button\", {\n      type: \"submit\",\n      className: \"btn-blue btn btn-block\",\n      disabled: isSubmitting\n    }, \"Verzenden\"), __jsx(\"pre\", null, JSON.stringify(values, null, 2))));\n  })), __jsx(\"div\", {\n    className: \"col-md-3\"\n  }))));\n};\n\nfunction postForm(data, actions) {\n  return postContact(data).then(function (data) {\n    if (typeof data.errors !== 'undefined') {\n      Object.keys(data.errors).forEach(function (item) {\n        actions.setFieldError(item, data.errors[item][0]);\n      });\n      return data.errors;\n    } else if (data.status == '200') {\n      console.log('messages is ontvangen', data);\n    } else {\n      console.log('something went wrong');\n      return {};\n    }\n  })[\"finally\"](function () {\n    actions.setSubmitting(false);\n  });\n}\n\nexport default Page;","map":{"version":3,"sources":["C:/Projects/bedrijfswebsite-nextjs/pages/offerte-aanvraag.js"],"names":["Layout","postContact","Formik","Field","FieldProps","SelectField","TextField","Checkbox","CheckboxGroup","RadioButton","RadioButtonGroup","IntroBanner","initialFormFields","diensten","contactpersoon","emailadres","bedrijfsnaam","telefoonnummer","uw_bericht","select","radio","checkbox","ServiceTypes","SLAs","Page","onSubmitForm","data","actions","setSubmitting","postForm","values","errors","touched","setFieldValue","setFieldTouched","handleChange","handleBlur","handleSubmit","isSubmitting","JSON","stringify","then","Object","keys","forEach","item","setFieldError","status","console","log"],"mappings":"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","sourcesContent":["import Layout from '../layouts/Main'\r\nimport { postContact } from '../api/contact/index'\r\nimport {Formik, Field, FieldProps} from \"formik\"\r\n\r\nimport {SelectField, TextField, Checkbox, CheckboxGroup, RadioButton, RadioButtonGroup} from \"../components/fields/InputField\"\r\n\r\nimport IntroBanner from \"../components/IntroBanner\";\r\n\r\nconst initialFormFields = {diensten: [], contactpersoon: '', emailadres: '', bedrijfsnaam: '', telefoonnummer: '', uw_bericht: '', select: \"\", radio: \"\", checkbox: false};\r\n\r\nconst ServiceTypes = {\r\n    \"onderhoud van uw bestaande website en of webshop\": 1,\r\n    \"websoftware een maatwerk systeem special gemaakt op uw bedrijfs behoeftes\": 2,\r\n    \"e-commerce web applicatie incl. (ideal, CMS, product management en ERP)\": 3\r\n}\r\n\r\nconst SLAs = {\r\n    \"wilt u een hosting pakket voor uw applicatie('s)?\": 1,\r\n    \"wilt u een zakelijk voip telefoon nummer?\": 2,\r\n    \"wilt u iemand die uw content management?\": 3,\r\n    \"wilt u blijven invensteren om de website over tijd beter te maken voor (CTA) call to action?\": 4\r\n}\r\n\r\nconst Page = ({}) => {\r\n\r\n    const onSubmitForm = (data, actions) => {\r\n        actions.setSubmitting(true);\r\n        postForm(data, actions)\r\n    }\r\n\r\n    return <Layout>\r\n        <IntroBanner title=\"offerte aanvraag\"/>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9\">\r\n\r\n                    <h2>offerteformulier</h2>\r\n                    <Formik onSubmit={onSubmitForm} initialValues={initialFormFields}>\r\n                        {({values, errors, touched, setFieldValue, setFieldTouched, handleChange, handleBlur, handleSubmit, isSubmitting}) => <div>\r\n                            <form onSubmit={handleSubmit} className=\"needs-validation\">\r\n\r\n                                <TextField\r\n                                    name=\"contactpersoon\"\r\n                                    label=\"contactpersoon\"\r\n                                    error={errors.contactpersoon}\r\n                                    value={values.contactpersoon}\r\n                                />\r\n                                <TextField\r\n                                    type=\"email\"\r\n                                    name=\"emailadres\"\r\n                                    label=\"emailadres\"\r\n                                    error={errors.emailadres}\r\n                                    value={values.emailadres} />\r\n                                <TextField\r\n                                    type=\"text\"\r\n                                    name=\"bedrijfsnaam\"\r\n                                    label=\"bedrijfsnaam\"\r\n                                    error={errors.bedrijfsnaam}\r\n                                    value={values.bedrijfsnaam} />\r\n\r\n                                {/*<CheckboxGroup*/}\r\n                                {/*    id=\"diensten\"*/}\r\n                                {/*    label=\"naar welke dienst bent u opzoek?\"*/}\r\n                                {/*    value={values.diensten}*/}\r\n                                {/*    error={errors.diensten}*/}\r\n                                {/*    touched={touched.diensten}*/}\r\n                                {/*    onChange={setFieldValue}*/}\r\n                                {/*    onBlur={setFieldTouched}*/}\r\n                                {/*>*/}\r\n                                {/*    {Object.keys(ServiceTypes).map(function(name, index) {*/}\r\n                                {/*        return (*/}\r\n                                {/*            <Field*/}\r\n                                {/*                key={index}*/}\r\n                                {/*                component={Checkbox}*/}\r\n                                {/*                id={name}*/}\r\n                                {/*                label={name}*/}\r\n                                {/*            />*/}\r\n                                {/*        )*/}\r\n                                {/*    })}*/}\r\n                                {/*</CheckboxGroup>*/}\r\n\r\n                                {/*<CheckboxGroup*/}\r\n                                {/*    id=\"pets\"*/}\r\n                                {/*    label=\"maandelijkse diensten\"*/}\r\n                                {/*    value={values.pets}*/}\r\n                                {/*    error={errors.pets}*/}\r\n                                {/*    touched={touched.pets}*/}\r\n                                {/*    onChange={setFieldValue}*/}\r\n                                {/*    onBlur={setFieldTouched}*/}\r\n                                {/*>*/}\r\n                                {/*    {Object.keys(SLAs).map(function(name, index) {*/}\r\n                                {/*        return (*/}\r\n                                {/*            <Field*/}\r\n                                {/*                key={index}*/}\r\n                                {/*                component={Checkbox}*/}\r\n                                {/*                id={name}*/}\r\n                                {/*                label={name}*/}\r\n                                {/*            />*/}\r\n                                {/*        )*/}\r\n                                {/*    })}*/}\r\n                                {/*</CheckboxGroup>*/}\r\n\r\n                                <TextField\r\n                                    type=\"textarea\"\r\n                                    name=\"opmerking\"\r\n                                    label=\"uw_bericht\"\r\n                                    error={errors.uw_bericht}\r\n                                    value={values.uw_bericht} />\r\n\r\n                                <button type=\"submit\" className=\"btn-blue btn btn-block\" disabled={isSubmitting}>Verzenden</button>\r\n\r\n                                <pre>{JSON.stringify(values, null, 2)}</pre>\r\n\r\n\r\n                            </form>\r\n                        </div>}\r\n\r\n                    </Formik>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Layout>\r\n}\r\n\r\nfunction postForm(data, actions) {\r\n    return postContact(data)\r\n        .then((data) => {\r\n            if(typeof data.errors !== 'undefined'){\r\n                Object.keys(data.errors).forEach(function (item) {\r\n                    actions.setFieldError(item, data.errors[item][0])\r\n                });\r\n                return data.errors;\r\n            }else if (data.status == '200'){\r\n                console.log('messages is ontvangen', data)\r\n            }else {\r\n                console.log('something went wrong')\r\n                return {}\r\n            }\r\n        })\r\n        .finally(() => {\r\n            actions.setSubmitting(false)\r\n        })\r\n}\r\n\r\nexport default Page\r\n"]},"metadata":{},"sourceType":"module"}